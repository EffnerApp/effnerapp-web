name: Application CI/CD

# Controls when the action will run.
on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - "ios/App/App.xcodeproj/"

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0

      - name: Setup Ionic
        run: npm install -D @ionic/cli

      - name: Install dependencies
        run: npm install

      - name: Grant execute permission for build script
        run: chmod +x scripts/build-android.sh

      - name: Build ionic web app
        run: ./scripts/build-android.sh

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      # build APK and app bundle
      - name: Build APK
        run: ./gradlew build -x test
        working-directory: ./android

      - name: Build bundle
        run: ./gradlew bundleRelease -x test
        working-directory: ./android

      # sign APK and aab
      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        id: sign_apk
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.3"

      - uses: r0adkll/sign-android-release@v1
        name: Sign app bundle
        id: sign_bundle
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.3"

      # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: Signed APK
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}

      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_bundle.outputs.signedReleaseFile}}

  build-ios:
    name: Build iOS app
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0

      - name: Setup Ionic
        run: npm install -D @ionic/cli

      - name: Install dependencies
        run: npm install

      - name: Grant execute permission for build script
        run: chmod +x scripts/build-ios.sh

      - name: Build ionic web app
        run: ./scripts/build-ios.sh

      - uses: sparkfabrik/ios-build-action@v1.1.0
        with:
          project-path: ios/App/App.xcodeproj
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          team-id: ${{ secrets.TEAM_ID }}
          workspace-path: ios/App/App.xcworkspace

      - uses: actions/upload-artifact@v2
        with:
          name: IPA
          path: output.ipa

      - name: Upload IPA to App Store Connect
        run: xcrun altool --upload-app -t ios -f "output.ipa" -u ${{ secrets.ASC_USER }} -p ${{ secrets.ASC_PASS }}

  release:
    name: Release App
    runs-on: ubuntu-latest
    needs: [build, build-ios]

    steps:
      - uses: actions/checkout@v2

#       - uses: actions/download-artifact@v2
#         with:
#           name: Android version name

#       - name: Read VERSION file
#         id: getversion
#         run: echo "::set-output name=version::$(cat VERSION)"

      - uses: actions/download-artifact@v2
        with:
          name: Signed APK

      - uses: actions/download-artifact@v2
        with:
          name: Signed app bundle

      - uses: actions/download-artifact@v2
        with:
          name: IPA

#       - uses: actions/download-artifact@v2
#         with:
#           name: Unsigned app bundle
#           path: bundle/

#       - uses: r0adkll/sign-android-release@v1
#         name: Sign app bundle
#         id: sign_app
#         with:
#           releaseDirectory: /home/runner/work/EffnerApp/EffnerApp/bundle
#           signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#           alias: ${{ secrets.ALIAS }}
#           keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#           keyPassword: ${{ secrets.KEY_PASSWORD }}
#         env:
#           BUILD_TOOLS_VERSION: "30.0.3"

#       - uses: actions/upload-artifact@v2
#         with:
#           name: Signed app bundle
#           path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: 'dev'
          files: |
            app-release.apk
            app-release.aab
            output.ipa
#            ${{steps.sign_app.outputs.signedReleaseFile}}

#   upload:
#     name: Upload & release app on Google Play
#     runs-on: ubuntu-latest
#     needs: [sign]

#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions/download-artifact@v2
#         with:
#           name: Signed app bundle
#       - uses: r0adkll/upload-google-play@v1
#         with:
#           serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#           packageName: de.effnerapp.effner
#           releaseFiles: 'app-release.aab'
#           track: alpha
#           whatsNewDirectory: dist/
