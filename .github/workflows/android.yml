name: Build android

# Controls when the action will run.
on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "release/android.json"

jobs:

  build-android:
    name: Build android app
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Grant execute permission
        run: chmod -R 777 scripts

      - name: update versions
        run: ./update-versions-android.sh
        working-directory: ./scripts

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0

      - name: Setup Ionic
        run: npm install -D @ionic/cli

      - name: Install dependencies
        run: npm install

      - name: Build ionic web app
        run: ./scripts/build-android.sh

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      # build APK and app bundle
      - name: Build APK
        run: ./gradlew build -x test
        working-directory: ./android

      - name: Build bundle
        run: ./gradlew bundleRelease -x test
        working-directory: ./android

      # sign APK and aab
      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        id: sign_apk
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.3"

      - uses: r0adkll/sign-android-release@v1
        name: Sign app bundle
        id: sign_bundle
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.3"

      # upload artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: Signed APK
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}

      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_bundle.outputs.signedReleaseFile}}

  release-github:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [build-android]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: Signed APK

      - uses: actions/download-artifact@v2
        with:
          name: Signed app bundle

      - run: mv app-release-unsigned-signed.apk app-release.apk

      - name: Grant execute permission
        run: chmod -R 777 scripts

      - name: update versions
        run: ./update-versions-android.sh
        working-directory: ./scripts

      - name: Expose version name
        uses: michpohl/android-expose-version-name-action@v1.0.0
        with:
          path: android/app/build.gradle
          expose-version-name: 'true'
          expose-version-code: 'false'

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.ANDROID_VERSION_NAME}}
          body_path: release/changelog/whatsnew-de-DE
          files: |
            app-release.apk
            app-release.aab

  release-android:
    name: Release app on Google Play
    runs-on: ubuntu-latest
    needs: [build-android]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: Signed app bundle

      - uses: r0adkll/upload-google-play@v1.0.16
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: de.effnerapp.effner
          releaseFiles: 'app-release.aab'
          track: alpha
          whatsNewDirectory: release/changelog/
          status: complete
